
/* _____ SYSTEM TOOLS _____ */

// importOnce
// this mixin makes it possible to have a file imported at multiple place and only be output the first time it is called
// it is used for placeholders to prevent them from being repeated by each file depending on them

$modules: () !default;

@mixin importOnce($uniqeRef) {
  @if not index($modules, $uniqeRef) {
    $modules: append($modules, $uniqeRef) !global;
    @content;
  }
}

// getPrefixes
// this function is used by mixins to set the proper progressive enhancement prefixes
@function getPrefix($feature, $useModernizr: true) {
  $yesPrefix: '';
  $noPrefix: '';
  @if $useModernizr {
    $yesPrefix: '.' + $feature;
    $noPrefix: '.no-' + $feature;
  }
  @return (yes: $yesPrefix, no: $noPrefix);
}

// mapReverse
// this function reverses a map and returns it
@function mapReverse ($map) {
  $result: null;

  @if type-of($map) == "map" {
    $keys: map-keys($map);
    $map-reversed: ();

    @for $i from length($keys) through 1 {
      $map-reversed: map-merge(
          $map-reversed,
          (nth($keys, $i): map-get($map, nth($keys, $i)))
      );
    }

    @if type-of($map-reversed) == "map" {
      $result: $map-reversed;
    } @else {
      @warn 'There was an error reversing the order of "#{$map}"';
    }
  } @else {
    @warn '"#{$map}" is not a valid map';
  }

  @return $result;
}

